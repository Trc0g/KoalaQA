worker_processes auto;
user nginx;

events {
    worker_connections 4096;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] $status "$request" $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$http_host"';

    error_log /dev/stderr error;
    access_log off;
    # access_log /dev/stdout main;

    sendfile on;
    keepalive_timeout 65;
    client_body_buffer_size 128k;
    client_header_buffer_size 2k;
    client_max_body_size 50M;

    gzip on;
    gzip_types application/javascript text/css image/png image/jpeg image/gif application/json;

    upstream nextjs_frontend {
        server 127.0.0.1:3000;
    }

    upstream koala-qa-api {
        server koala-qa-api:8080;
    }

    server {
        listen 80;
        server_name _;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Port $http_x_forwarded_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;


        location /admin/assets/ {
            alias /var/www/admin/assets/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /admin {
            alias /var/www/admin;
            index index.html;
            try_files $uri $uri/ /admin/index.html;
            
            location ~* ^/admin/(?!.*\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)).*$ {
                try_files $uri /admin/index.html;
            }
        }

        location /api {
            proxy_pass http://koala-qa-api;
        }

        location ~ ^/(anydoc|koala) {
            proxy_set_header Host $http_host;
            proxy_pass http://koala-qa-oss:9000;
        }

        location /_next/static/ {
            proxy_pass http://nextjs_frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        location /_next/image {
            proxy_pass http://nextjs_frontend;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        location / {
            proxy_pass http://nextjs_frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            proxy_buffering off;
        }

    }
}
